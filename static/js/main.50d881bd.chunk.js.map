{"version":3,"sources":["components/header/menu/Menu.module.scss","components/projects/Projects.module.scss","components/header/Header.module.scss","components/login/Login.module.scss","components/register/Register.module.scss","components/main/Main.module.scss","components/footer/Footer.module.scss","components/footer/footerRight/FooterRight.module.scss","image/logo.svg","image/pacman.svg","components/projects/springProject/SpringProject.module.scss","components/footer/footerLeft/FooterLeft.module.scss","serviceWorker.js","components/header/menu/Menu.jsx","redux/loginAction.js","api/index.js","redux/loginPageReducer.js","components/header/Header.jsx","components/main/Main.jsx","components/projects/springProject/SpringProjects.jsx","redux/projectAction.js","redux/projectPageReducer.js","components/projects/Projects.jsx","components/footer/footerLeft/FooterLeft.jsx","components/footer/footerRight/FooterRight.jsx","components/footer/Footer.jsx","redux/registerAction.js","components/login/Login.jsx","redux/registerPageReducer.js","components/register/Register.jsx","App.jsx","redux/store.js","index.jsx"],"names":["module","exports","Boolean","window","location","hostname","match","Menu","props","className","menu","style","navArrow","href","SET_USER_DATA","SET_SOME_STATUS","setUserData","login","type","payload","setErrorMessage","errorMessage","instance","axios","create","baseURL","getToken","token","localStorage","getItem","Authorization","projectsAPI","get","headers","inputValue","authAPI","password","post","initialState","loginPageReducer","state","action","Header","useState","isHidden","setIsHidden","history","useHistory","dispatch","useDispatch","menuBurgerClassActive","menuBurgerActive","menuBurger","menuActive","styleMenu","document","querySelector","classList","add","remove","wrapperBlock","headerBody","logo","src","alt","onClick","clear","push","Main","headpiece","pacman","mainContent","SpringProject","springProject","img","title","body","SET_PROJECTS","setProjects","projects","springProjects","springAtticProjects","projectPageReducer","Projects","setInputValue","useEffect","a","data","console","log","useSelector","projectPage","createSpringProject","length","map","el","key","createSpringAtticProject","onSearchProjects","e","searchProjects","searchBlock","placeForSearch","value","onChange","currentTarget","onKeyUp","placeholder","searchButton","FooterLeft","springFooterLeft","FooterRight","springFooterRight","sendingData","id","htmlFor","Footer","springFooter","SET_IS_REGISTERED","SET_LOGIN_ERROR","SET_PASS_ERROR","setIsRegistered","isRegistered","setLoginError","loginError","setPassError","passError","Login","setLogin","setPassword","loginPage","wrapper","onSubmit","preventDefault","response","setItem","error","signIn","then","loginForm","loginBtn","to","registerLink","registerPageReducer","Register","registerPage","errors","find","param","msg","register","required","App","SpringApp","from","path","component","reducers","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.50d881bd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Menu_menu__2hK9s\",\"menuActive\":\"Menu_menuActive__2PyZZ\",\"navArrow\":\"Menu_navArrow__4c6O7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperBlock\":\"Projects_wrapperBlock__3ZC7I\",\"searchBlock\":\"Projects_searchBlock__vU10u\",\"placeForSearch\":\"Projects_placeForSearch__1loZD\",\"searchButton\":\"Projects_searchButton__2CdDl\",\"springAtticProjects\":\"Projects_springAtticProjects__1oZCu\",\"springProjects\":\"Projects_springProjects__smTQU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperBlock\":\"Header_wrapperBlock__2dhMt\",\"headerBody\":\"Header_headerBody__2e9Ve\",\"logo\":\"Header_logo__2419U\",\"menuBurger\":\"Header_menuBurger__1hUDO\",\"menuBurgerActive\":\"Header_menuBurgerActive__smpza\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login_wrapper__oil-E\",\"loginForm\":\"Login_loginForm__1IPrs\",\"loginBtn\":\"Login_loginBtn__1Wf_W\",\"registerLink\":\"Login_registerLink__15vfD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Register_wrapper__1nSMt\",\"loginForm\":\"Register_loginForm__19Jxf\",\"loginBtn\":\"Register_loginBtn__2xb2U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperBlock\":\"Main_wrapperBlock__2N7t0\",\"headpiece\":\"Main_headpiece__3qmKt\",\"mainContent\":\"Main_mainContent__2eqQF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapperBlock\":\"Footer_wrapperBlock__L1QZT\",\"springFooter\":\"Footer_springFooter__3nXjw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"springFooterRight\":\"FooterRight_springFooterRight__2CBPU\",\"sendingData\":\"FooterRight_sendingData__1CsvB\"};","module.exports = __webpack_public_path__ + \"static/media/logo.fc4350c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pacman.c8a21978.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"springProject\":\"SpringProject_springProject__1VQuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"springFooterLeft\":\"FooterLeft_springFooterLeft__2vtGs\"};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport style from './Menu.module.scss'\n\nconst Menu = (props) => (\n  <div className={props.menu}>\n    <ul>\n      <li>\n        <div>\n          <span>Why Spring</span>\n          <div className={style.navArrow} />\n        </div>\n        <ul>\n          <li><a href=\"#\">Overview</a></li>\n          <li><a href=\"#\">Microservices</a></li>\n          <li><a href=\"#\">Reactive</a></li>\n          <li><a href=\"#\">Event Driven</a></li>\n          <li><a href=\"#\">Cloud</a></li>\n        </ul>\n      </li>\n      <li>\n        <div>\n          <span>Learn</span>\n          <div className={style.navArrow} />\n        </div>\n        <ul>\n          <li><a href=\"#\">Overview</a></li>\n          <li><a href=\"#\">Quickstart</a></li>\n          <li><a href=\"#\">Guides</a></li>\n          <li><a href=\"#\">Blog</a></li>\n        </ul>\n      </li>\n      <li>\n        <div>\n          <span>Projects</span>\n          <div className={style.navArrow} />\n        </div>\n        <ul>\n          <li><a href=\"#\">Overview</a></li>\n          <li><a href=\"#\">Spring Boot</a></li>\n          <li><a href=\"#\">Spring Framework</a></li>\n          <li><a href=\"#\">Spring Cloud</a></li>\n          <li><a href=\"#\">Spring Data</a></li>\n        </ul>\n      </li>\n      <li>\n        <a href=\"#\"><span>Training</span></a>\n      </li>\n      <li>\n        <a href=\"#\"><span>Support</span></a>\n      </li>\n      <li>\n        <div>\n          <span>Community</span>\n          <div className={style.navArrow} />\n        </div>\n        <ul>\n          <li><a href=\"#\">Overview</a></li>\n          <li><a href=\"#\">Events</a></li>\n          <li><a href=\"#\">Team</a></li>\n          <li><a href=\"#\">Store</a></li>\n        </ul>\n      </li>\n    </ul>\n  </div>\n)\n\nexport default Menu\n","export const SET_USER_DATA = 'spring/loginPage/SET_USER_DATA'\r\nexport const SET_SOME_STATUS = 'spring/loginPage/SET_SOME_STATUS'\r\n\r\nexport const setUserData = (login) => ({\r\n  type: SET_USER_DATA,\r\n  payload: { login }\r\n})\r\n\r\nexport const setErrorMessage = (errorMessage) => ({\r\n  type: SET_SOME_STATUS,\r\n  payload: { errorMessage }\r\n})\r\n","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://banana-tart-40503.herokuapp.com/'\r\n})\r\nconst getToken = () => {\r\n  const token = localStorage.getItem('token')\r\n  if (token) {\r\n    return { Authorization: `Bearer ${token}` }\r\n  }\r\n  return {}\r\n}\r\nexport const projectsAPI = {\r\n  getProjects () {\r\n    return instance.get('projects', {\r\n      headers:\r\n          getToken()\r\n    })\r\n  },\r\n  searchProjects (inputValue) {\r\n    return instance.get(`projects?value=${inputValue}`, {\r\n      headers:\r\n          getToken()\r\n    })\r\n  }\r\n}\r\n\r\nexport const authAPI = {\r\n  login (login, password) {\r\n    return instance.post('login', { login, password })\r\n  },\r\n  register (login, password) {\r\n    return instance.post('register', { login, password })\r\n  }\r\n}\r\n","import { SET_SOME_STATUS, SET_USER_DATA, setErrorMessage, setUserData } from './loginAction'\r\nimport { authAPI } from '../api'\r\n\r\nconst initialState = {\r\n  login: null,\r\n  errorMessage: ''\r\n}\r\n\r\nconst loginPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_USER_DATA:\r\n    case SET_SOME_STATUS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const signIn = (login, password) => async dispatch => {\r\n  try {\r\n    const response = await authAPI.login(login, password)\r\n    localStorage.setItem('token', response.data.token)\r\n    dispatch(setUserData(login))\r\n    dispatch(setErrorMessage(''))\r\n  } catch (error) {\r\n    dispatch(setErrorMessage(error.response.data.error))\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const logOut = () => dispatch => {\r\n  dispatch(setUserData(null))\r\n}\r\n\r\nexport default loginPageReducer\r\n","import React, { useState } from 'react'\nimport style from './Header.module.scss'\nimport styleMenu from './menu/Menu.module.scss'\nimport Menu from './menu/Menu'\nimport logo from '../../image/logo.svg'\nimport '../../index.scss'\nimport { useDispatch } from 'react-redux'\nimport { logOut } from '../../redux/loginPageReducer'\nimport { useHistory } from 'react-router-dom'\n\nconst Header = () => {\n  const [isHidden, setIsHidden] = useState(false)\n  const history = useHistory()\n\n  const dispatch = useDispatch()\n  const menuBurgerClassActive = isHidden ? style.menuBurgerActive : style.menuBurger\n  const menuActive = isHidden ? styleMenu.menuActive : styleMenu.menu\n  const toggleBurgerMenu = () => {\n    setIsHidden(!isHidden)\n  }\n  if (isHidden) {\n    document.querySelector('body').classList.add('lock')\n  } else {\n    document.querySelector('body').classList.remove('lock')\n  }\n  const onLogOut = () => {\n    dispatch(logOut())\n    localStorage.clear()\n    history.push('/spring')\n  }\n  return (\n    <header>\n      <div className={style.wrapperBlock}>\n        <div className={style.headerBody}>\n          <div className={style.logo}>\n            <a href=\"#\">\n              <img src={logo} alt=\"logo\" />\n            </a>\n          </div>\n          <div className={menuBurgerClassActive} onClick={toggleBurgerMenu}>\n            <span />\n          </div>\n          <Menu menu={menuActive} />\n        </div>\n        <div>\n          <button onClick={onLogOut}>Log out</button>\n        </div>\n      </div>\n    </header>\n  )\n}\n\nexport default Header\n","import React from 'react'\nimport style from './Main.module.scss'\nimport pacman from '../../image/pacman.svg'\n\nconst Main = () => (\n  <main>\n    <div className={style.wrapperBlock}>\n      <img className={style.headpiece} src={pacman} alt=\"pacman\" />\n      <div className={style.mainContent}>\n        <h1>Projects</h1>\n        <p>\n          From configuration to security, web apps to big data—whatever the infrastructure needs of\n          your\n          application may be, there is a Spring Project to help you build it. Start small and use just\n          what\n          you need—Spring is modular by design.\n        </p>\n      </div>\n    </div>\n  </main>\n);\n\nexport default Main\n","import React from 'react'\r\nimport style from './SpringProject.module.scss'\r\n\r\nconst SpringProject = (props) => (\r\n  <div className={style.springProject}>\r\n    <div>\r\n      <img src={props.img} alt=\"project_logo\" />\r\n    </div>\r\n    <div>\r\n      <h3>{props.title}</h3>\r\n      <p>{props.body}</p>\r\n    </div>\r\n  </div>\r\n)\r\n\r\nexport default SpringProject\r\n","export const SET_PROJECTS = 'spring/projectsPage/SET_PROJECTS'\r\n\r\nexport const setProjects = (projects) => ({\r\n  type: SET_PROJECTS,\r\n  payload: projects\r\n})\r\n","import { projectsAPI } from '../api'\r\nimport { SET_PROJECTS, setProjects } from './projectAction'\r\n\r\nconst initialState = {\r\n  springProjects: [],\r\n  springAtticProjects: []\r\n}\r\n\r\nconst projectPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_PROJECTS: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const getProjects = () => async (dispatch) => {\r\n  try {\r\n    const projects = await projectsAPI.getProjects()\r\n    dispatch(setProjects(projects.data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport const searchProjects = (inputValue) => async (dispatch) => {\r\n  try {\r\n    const projects = await projectsAPI.searchProjects(inputValue)\r\n    dispatch(setProjects(projects.data))\r\n  } catch (error) {\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport default projectPageReducer\r\n","import React, { useEffect, useState } from 'react'\nimport style from './Projects.module.scss'\nimport SpringProject from './springProject/SpringProjects'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProjects, searchProjects } from '../../redux/projectPageReducer'\n\nconst Projects = () => {\n  const [inputValue, setInputValue] = useState('')\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(getProjects())\n  }, [])\n  const springProjects = useSelector(state => state.projectPage.springProjects)\n  const springAtticProjects = useSelector(state => state.projectPage.springAtticProjects)\n  const createSpringProject = springProjects.length\n    ? springProjects.map((el) => (\n      <SpringProject\n        key={el.title}\n        img={el.img}\n        title={el.title}\n        body={el.body}\n      />\n    ))\n    : 'No results'\n  const createSpringAtticProject = springAtticProjects.length\n    ? springAtticProjects.map((el) => (\n      <SpringProject\n        key={el.title}\n        img={el.img}\n        title={el.title}\n        body={el.body}\n      />\n    ))\n    : 'No results'\n  const onInputChange = (e) => {\n    setInputValue(e.currentTarget.value)\n  }\n  const onSearchProjects = (e) => {\n    dispatch(searchProjects(inputValue))\n  }\n  return (\n    <section>\n      <div className={style.wrapperBlock}>\n        <div className={style.searchBlock}>\n          <input\n            className={style.placeForSearch}\n            value={inputValue}\n            onChange={onInputChange}\n            onKeyUp={onSearchProjects}\n            type=\"text\"\n            placeholder=\"Search...\"\n          />\n          <button className={style.searchButton} onClick={onSearchProjects}/>\n        </div>\n        <div className={style.springProjects}>\n          {createSpringProject}\n        </div>\n        <div className={style.springAtticProjects}>\n          <h3>Projects in the Attic</h3>\n          <div className={style.springProjects}>\n            {createSpringAtticProject}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import React from 'react'\nimport style from './FooterLeft.module.scss'\n\nconst FooterLeft = () => (\n  <div className={style.springFooterLeft}>\n    <div>\n      <p><a href=\"#\">Why spring</a></p>\n      <ul>\n        <li><a href=\"#\">Microservices</a></li>\n        <li><a href=\"#\">Reactive</a></li>\n        <li><a href=\"#\">Event Driven</a></li>\n        <li><a href=\"#\">Cloud</a></li>\n        <li><a href=\"#\">Web Applications</a></li>\n        <li><a href=\"#\">Serverless</a></li>\n        <li><a href=\"#\">Batch</a></li>\n      </ul>\n    </div>\n    <div>\n      <p><a href=\"#\">Learn</a></p>\n      <ul>\n        <li><a href=\"#\">Quickstart</a></li>\n        <li><a href=\"#\">Guides</a></li>\n        <li><a href=\"#\">Blog</a></li>\n      </ul>\n    </div>\n    <div>\n      <p><a href=\"#\">Community</a></p>\n      <ul>\n        <li><a href=\"#\">Events</a></li>\n        <li><a href=\"#\">Team</a></li>\n        <li><a href=\"#\">Store</a></li>\n      </ul>\n    </div>\n    <div>\n      <p><a href=\"#\">Projects</a></p>\n      <p><a href=\"#\">Training</a></p>\n      <p><a href=\"#\">Support</a></p>\n      <p><a href=\"#\">Thank you</a></p>\n    </div>\n  </div>\n)\n\nexport default FooterLeft\n","import React from 'react'\nimport style from './FooterRight.module.scss'\n\nconst FooterRight = () => (\n  <div className={style.springFooterRight}>\n    <h3>Get the Spring newsletter</h3>\n    <form>\n      <div className={style.sendingData}>\n        <input type=\"text\" placeholder=\"Email Address\" />\n        <button type=\"submit\">Subscribe</button>\n      </div>\n      <div>\n        <input id=\"footer-checkbox\" type=\"checkbox\" />\n        <label htmlFor=\"footer-checkbox\">\n          Yes, I would like to be contacted by The Spring Team and Pivotal for\n          newsletters, promotions and events per the terms of Pivotal’s\n        </label>\n      </div>\n    </form>\n  </div>\n)\n\nexport default FooterRight\n","import React from 'react'\nimport style from './Footer.module.scss'\nimport FooterLeft from './footerLeft/FooterLeft'\nimport FooterRight from './footerRight/FooterRight'\n\nconst Footer = () => (\n  <div className={style.wrapperBlock}>\n    <div className={style.springFooter}>\n      <FooterLeft />\n      <FooterRight />\n    </div>\n  </div>\n)\n\nexport default Footer\n","export const SET_IS_REGISTERED = 'spring/registerPage/SET_IS_REGISTERED'\r\nexport const SET_SOME_STATUS = 'spring/registerPage/SET_SOME_STATUS'\r\nexport const SET_LOGIN_ERROR = 'spring/registerPage/SET_LOGIN_ERROR'\r\nexport const SET_PASS_ERROR = 'spring/registerPage/SET_PASS_ERROR'\r\n\r\nexport const setIsRegistered = (isRegistered) => ({\r\n  type: SET_IS_REGISTERED,\r\n  payload: { isRegistered }\r\n})\r\n\r\nexport const setErrorMessage = (errorMessage) => ({\r\n  type: SET_SOME_STATUS,\r\n  payload: { errorMessage }\r\n})\r\n\r\nexport const setLoginError = (loginError) => ({\r\n  type: SET_LOGIN_ERROR,\r\n  payload: { loginError }\r\n})\r\n\r\nexport const setPassError = (passError) => ({\r\n  type: SET_PASS_ERROR,\r\n  payload: { passError }\r\n})\r\n","import React, { useState } from 'react'\r\nimport style from './Login.module.scss'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink, useHistory } from 'react-router-dom'\r\nimport { signIn } from '../../redux/loginPageReducer'\r\nimport { setIsRegistered } from '../../redux/registerAction'\r\nimport { setErrorMessage } from '../../redux/loginAction'\r\n\r\nconst Login = () => {\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n  const errorMessage = useSelector(state => state.loginPage.errorMessage)\r\n  const history = useHistory()\r\n\r\n  const onLoginChange = (e) => {\r\n    setLogin(e.currentTarget.value)\r\n  }\r\n\r\n  const onPasswordChange = (e) => {\r\n    setPassword(e.currentTarget.value)\r\n  }\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(signIn(login, password)).then(() => {\r\n      if (localStorage.getItem('token')) {\r\n        history.push('/spring')\r\n      }\r\n    })\r\n  }\r\n  const onRegistration = () => {\r\n    dispatch(setIsRegistered(false))\r\n    dispatch(setErrorMessage(''))\r\n  }\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <form onSubmit={onSubmit} className={style.loginForm}>\r\n        <h2>Sign in</h2>\r\n        <input type=\"text\" placeholder=\"login\" value={login} onChange={onLoginChange}/>\r\n        <input type=\"password\" placeholder=\"password\" value={password} onChange={onPasswordChange}/>\r\n        <div>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n        <div>\r\n          <button className={style.loginBtn}>Sign in</button>\r\n          <NavLink to='/register' className={style.registerLink} onClick={onRegistration}>Registration</NavLink>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import {\r\n  SET_IS_REGISTERED, SET_LOGIN_ERROR, SET_PASS_ERROR,\r\n  SET_SOME_STATUS,\r\n  setErrorMessage,\r\n  setIsRegistered, setLoginError, setPassError\r\n} from './registerAction'\r\nimport { authAPI } from '../api'\r\n\r\nconst initialState = {\r\n  isRegistered: false,\r\n  errorMessage: '',\r\n  loginError: {},\r\n  passError: {}\r\n}\r\n\r\nconst registerPageReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_IS_REGISTERED:\r\n    case SET_SOME_STATUS:\r\n    case SET_LOGIN_ERROR:\r\n    case SET_PASS_ERROR: {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      }\r\n    }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport const register = (login, password) => async dispatch => {\r\n  try {\r\n    await authAPI.register(login, password)\r\n    dispatch(setIsRegistered(true))\r\n    dispatch(setErrorMessage(''))\r\n  } catch (error) {\r\n    dispatch(setErrorMessage(error.response.data.error))\r\n    dispatch(setLoginError({}))\r\n    dispatch(setPassError({}))\r\n    if (error.response.data.errors) {\r\n      dispatch(setLoginError(error.response.data.errors.find(error => error.param === 'login') || { msg: '' }))\r\n      dispatch(setPassError(error.response.data.errors.find(error => error.param === 'password') || { msg: '' }))\r\n    }\r\n    console.log(error)\r\n  }\r\n}\r\n\r\nexport default registerPageReducer\r\n","import React, { useState } from 'react'\r\nimport style from './Register.module.scss'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { NavLink, Redirect } from 'react-router-dom'\r\nimport { register } from '../../redux/registerPageReducer'\r\nimport { setErrorMessage, setLoginError, setPassError } from '../../redux/registerAction'\r\n\r\nconst Register = () => {\r\n  const [login, setLogin] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const dispatch = useDispatch()\r\n  const isRegistered = useSelector(state => state.registerPage.isRegistered)\r\n  const errorMessage = useSelector(state => state.registerPage.errorMessage)\r\n  const loginError = useSelector(state => state.registerPage.loginError)\r\n  const passError = useSelector(state => state.registerPage.passError)\r\n\r\n  if (isRegistered) {\r\n    return <Redirect to='/login'/>\r\n  }\r\n\r\n  const onLoginChange = (e) => {\r\n    setLogin(e.currentTarget.value)\r\n  }\r\n\r\n  const onPasswordChange = (e) => {\r\n    setPassword(e.currentTarget.value)\r\n  }\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(register(login, password))\r\n  }\r\n  const onCancelRegistration = () => {\r\n    dispatch(setErrorMessage(''))\r\n    dispatch(setLoginError({}))\r\n    dispatch(setPassError({}))\r\n  }\r\n\r\n  return (\r\n    <div className={style.wrapper}>\r\n      <form onSubmit={onSubmit} className={style.loginForm}>\r\n        <h2>Registration</h2>\r\n        <input type=\"text\" placeholder=\"login\" value={login} onChange={onLoginChange} required/>\r\n        <div>\r\n          <span>{loginError.msg}</span>\r\n        </div>\r\n        <input type=\"password\" placeholder=\"password\" value={password} onChange={onPasswordChange} required/>\r\n        <div>\r\n          <span>{passError.msg}</span>\r\n        </div>\r\n        <div>\r\n          <span>{errorMessage}</span>\r\n        </div>\r\n        <div>\r\n          <button className={style.loginBtn}>Registration</button>\r\n          <NavLink to='/login'><button className={style.loginBtn} onClick={onCancelRegistration}>Cancel</button></NavLink>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Register\r\n","import React from 'react'\nimport { HashRouter, Redirect, Route } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport Main from './components/main/Main'\nimport Projects from './components/projects/Projects'\nimport Footer from './components/footer/Footer'\nimport Login from './components/login/Login'\nimport Register from './components/register/Register'\n\nconst App = () => {\n  if (!localStorage.getItem('token')) {\n    return <Redirect to='/login'/>\n  }\n  return (\n    <>\n      <Header />\n      <Main />\n      <Projects />\n      <Footer />\n    </>\n  )\n}\n\nconst SpringApp = () => {\n  return (\n    <HashRouter>\n      <Redirect from='/' to='/spring' />\n      <Route path='/spring' component={App} />\n      <Route path='/login' component={Login} />\n      <Route path='/register' component={Register} />\n    </HashRouter>\n  )\n}\n\nexport default SpringApp\n","import { applyMiddleware, combineReducers, compose, createStore } from 'redux'\r\nimport loginPageReducer from './loginPageReducer'\r\nimport thunk from 'redux-thunk'\r\nimport projectPageReducer from './projectPageReducer'\r\nimport registerPageReducer from './registerPageReducer'\r\n\r\nconst reducers = combineReducers({\r\n  loginPage: loginPageReducer,\r\n  projectPage: projectPageReducer,\r\n  registerPage: registerPageReducer\r\n})\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\r\nconst store = createStore(reducers, composeEnhancers(\r\n  applyMiddleware(thunk)\r\n))\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker'\nimport SpringApp from './App'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\n\nReactDOM.render(<Provider store={store}>\n  <SpringApp />\n</Provider>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}